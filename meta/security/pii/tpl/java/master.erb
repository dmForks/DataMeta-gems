package <%= namespace %>;

/*
 ****************  This file is generated by DataMeta; do not edit manually!!
*/

import java.util.HashMap;
import java.util.Map;

import static java.util.Collections.unmodifiableMap;

/**
 * The encapsulation of the version <%= reg.ver %> of the Abstract PII definition.
 */
public class <%= className %> {
<% reg.keyVos.keys.sort.each { |k| fldName = k.to_s.inspect; %>
  public final static String <%= k.to_s %> = <%=fldName%>;
<%}%>

  /**
   * Impact Levels:
  */
  public static enum Level {
<%= (codeIndent * 3)[0..-2] %><%= ALL_IMPACTS.map{|i| i.to_s.upcase}.join(",\n#{(codeIndent * 3)[0..-2]}") %>

  }

  /**
   * One abstract key definition encapsulation.
   */
  public static class Def {
    private final String key;
    private final Level level;
    private final Map<String, String> props;

    public Def(String key, final Level level, final Map<String, String> props) {
      this.key = key;
      this.level = level;
      this.props = props;
    }

    public Level getLevel() { return level; }

    public Map<String, String> getProps() { return props; }

    public String getKey() { return key; }
  }

  /**
   * The map keyed by field name pointing to the matching instance of the {@link Def} class.
   */
  public static final Map<String, Def> DEFS = unmodifiableMap(new HashMap<String, Def>() {
    {
<% reg.keyVos.keys.sort.each { |k| fldName = k.to_s; fldDef = reg.keyVos[k] %>
      put(<%= fldName %>, new Def(<%= fldName %>, Level.<%= fldDef.level.to_s.upcase %>, unmodifiableMap(new HashMap<String, String>() {
        {<% fldDef.attrs.keys.sort.each {|k| keyStr = k.to_s.inspect; valStr = fldDef.attrs[k].inspect %>
          put(<%=keyStr%>, <%=valStr%>); <% } %>
        }
      })));
<%   } %>
      }
    });
}

